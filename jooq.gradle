def jooqOut = "$buildDir/jooq"
def writer = new StringWriter()

def dbDdl = "$projectDir/src/test/resources/database.ddl"

new groovy.xml.MarkupBuilder(writer).
configuration {
	jdbc {
		
		driver 'org.h2.Driver'
		url "jdbc:h2:mem:testdb;INIT=RUNSCRIPT FROM '${dbDdl}'"
		user 'sa'
		password ''
	}
	generator {
		database {
			name 'org.jooq.util.h2.H2Database'
			include '.*'
			exclude ''
			inputSchema 'PUBLIC'
		}
		generate {
			records true
			relations false
			deprecated false
			daos false
			pojos false
			immutablePojos false
			fluentSetters false
		}
		target {
			packageName 'org.example.dbunit.jooq.xtend'
			directory "$buildDir/jooq"
		}
	}
}

configurations { jooq }

dependencies {
    jooq 'org.jooq:jooq-codegen:3.6.4'
    jooq 'com.h2database:h2:1.4.191'

    compile 'org.jooq:jooq:3.6.4'
}

task generateDB() << {
	// task to create a db, when use in memory db this task is empty
}

task jooq(type: JavaExec) {
	File xml = new File("$buildDir/jooq-config.xml")
	
	doFirst {
		xml.parentFile.mkdirs()
		xml.text = writer.toString()
	}
    description "Generate jooq classes into $jooqOut"

    classpath = configurations.jooq

    main = 'org.jooq.util.GenerationTool'
	
	
    args xml

    dependsOn(generateDB)
    outputs.dir jooqOut
    outputs.upToDateWhen { return false }
}
generateXtext.dependsOn(jooq)

task cleanJooq(type: Delete) {
    description "Clean generated jooq classes"
    delete jooqOut
}

sourceSets.main.java.srcDir jooqOut

